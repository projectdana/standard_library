/* {"description" : "This type describes a component's interface."} */
data InterfaceSpec {
	/* {"@description" : "The name used to identify the interface."} */
	char alias[]
	/* {"@description" : "The package in which the interface type was originally defined."} */
	char package[]
	/* {"@description" : "The semantic variant of this interface (optional)."} */
	char variant[]
	/* {"@description" : "The type of this interface."} */
	Type type
	/* {"@description" : "Flags associated with this interface."} */
	const byte F_NATIVE = 1
	byte flags
	}

/*
 {"description" : "This type represents a loaded component."}
*/
interface IDC {
	
	/* {"@description" : "Wire one of the required interfaces on this component to a provided interface on another component."} */
	bool wire(char reqIntf[], IDC com, char proIntf[])
	
	/* {"@description" : "Get the list of provided interfaces on this component."} */
	InterfaceSpec[] getProvides()
	
	/* {"@description" : "Get the list of required interfaces on this component."} */
	InterfaceSpec[] getRequires()
	
	/* {"@description" : "Check if a given interface is provided by this component."} */
	bool hasProvides(char proIntf[])
	
	/* {"@description" : "Check if a given interface is required by this component."} */
	bool hasRequires(char reqIntf[])
	
	/* {"@description" : "Check if a given required interface is connected to another component (i.e., the dependency is satisfied)."} */
	bool isConnected(char reqIntf[])
	
	/* {"@description" : "Get the component to which a given required interface is connected."} */
	IDC getComponent(char reqIntf[])
	
	/* {"@description" : "Pause a given required interface (used as part of runtime adaptation)."} */
	bool pause(char reqIntf[])
	
	/* {"@description" : "Resume a given required interface (used as part of runtime adaptation)."} */
	bool resume(char reqIntf[])
	
	/* {"@description" : "Get the set of objects that have been instantiated over a given required interface (used as part of runtime adaptation)."} */
	Object[] getObjects(char reqIntf[])
	
	/* {"@description" : "Create a new object from a given required interface, but do not call its constructor (used as part of runtime adaptation)."} */
	Object initObject(char reqIntf[])
	
	/*
	 {"@description" : "Call a function on a secondary interface of an object. This function checks if the given interface exists on the object, and calls specified function if so. Parameters are passed by creating a Data type in which each field is a parameter. The return value is provided in a data type with a single field of type matching the function's return type."}
	*/
	Data callInterface(Object o, char typeName[], Type type, TypeField functionIndex, Data parameters)
	
	/* {"@description" : "Checks if an object has a secondary interface of the given type."} */
	bool hasInterface(Object o, char typeName[], Type type)
	
	/* {"@description" : "Check if the given object has transfer state."} */
	bool hasTransferState(Object o)
	
	/* {"@description" : "Get the transfer state of the given object. This function also resets the transfer state fields of the given object to default values." */
	Data getTransferState(Object o)
	
	/* {"@description" : "Set the transfer state of the given object."} */
	bool setTransferState(Object o, Data d)
	
	/* {"@description" : "Adopt the given object as if instantiated via the given required interface."} */
	bool adoptObject(char reqIntf[], Object o)

	/* {"@description" : "Configure whether or not exceptions generated within this component are printed."} */
	void enableExceptions(bool on)
	}
