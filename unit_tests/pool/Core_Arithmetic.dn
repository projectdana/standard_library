component provides UnitTest {
	
	dec dec_testA()
		{
		dec a = 1.1
		
		dec b = -0.5
		
		return a * b
		}
	
	dec dec_testB()
		{
		dec a = -1.1
		
		dec b = -1.1
		
		return a * b
		}
	
	dec dec_testC()
		{
		dec a = -1.1
		
		dec b = 1.1
		
		return a * b
		}
	
	dec dec_testD()
		{
		dec a = 1.1
		
		dec b = 1.1
		
		return a * b
		}
	
	int decint_testA()
		{
		dec a = 1100.0
		dec b = 100.0
		int c = a / b
		
		return c
		}
	
	int decint_testB()
		{
		dec a = 80.0
		int b = 9
		int c = (a / 100.0) * b
		
		return c
		}
	
	bool UnitTest:runTest()
		{
		int a = 2 + 2
		
		if (a != 4) throw new Exception("Failure in test 1")
		
		a = 4 * 4
		
		if (a != 16) throw new Exception("Failure in test 2")
		
		a = 360 / 60
		
		if (a != 6) throw new Exception("Failure in test 3")
		
		int16 q = INT_MAX
		
		q = q + INT_MAX
		q -= INT_MAX
		
		if (q != INT_MAX) throw new Exception("Failure in test 4")
		
		q *= INT_MAX
		q = q / INT_MAX
		
		if (q != INT_MAX) throw new Exception("Failure in test 5")
		
		if (dec_testA() != -0.55) throw new Exception("Failure in test 6")
		
		if (dec_testB() != 1.21) throw new Exception("Failure in test 7")
		
		if (dec_testC() != -1.21) throw new Exception("Failure in test 8")
		
		if (dec_testD() != 1.21) throw new Exception("Failure in test 9")
		
		if (decint_testA() != 11) throw new Exception("Failure in test 10")
		
		if (decint_testB() != 7) throw new Exception("Failure in test 11")
		
		return true
		}
	
	}