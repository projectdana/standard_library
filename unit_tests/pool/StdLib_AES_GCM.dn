component provides UnitTest requires util.Random random, sec.hash.SHA2 sha2, sec.crypto.AES_GCM {
	
	bool UnitTest:runTest()
		{
		char iv[] = random.getString(16)
		
		char plain[] = "Hello Daddy"
		
		AES_GCM aesEnc = new AES_GCM(AES_GCM.ENCRYPT, 256, sha2.hashData("password", SHA2.HASH_SHA_256), iv)
		
		byte encrypted[] = aesEnc.encryptPart(plain)
		encrypted = new byte[](encrypted, aesEnc.encryptFinish())
		
		byte tag[] = aesEnc.encryptGetTag()
		
		AES_GCM aesDec = new AES_GCM(AES_GCM.DECRYPT, 256, sha2.hashData("password", SHA2.HASH_SHA_256), iv)
		
		aesDec.decryptSetTag(tag)
		
		byte decrypted[] = aesDec.decryptPart(encrypted)
		decrypted = new byte[](decrypted, aesDec.decryptFinish())
		
		if (decrypted != plain) throw new Exception("Failure in test 1")
		
		if (!aesDec.decryptOK()) throw new Exception("Failure in test 2")
		
		return true
		}
	
	}